parameters:
  - name: PackageVersion
  - name: PackagePath
  - name: WinFxdPath
  - name: LinuxFxdPath
  - name: GenAPIToolPath
  - name: ListOfFiles
    type: object
    default:
    - Microsoft.Management.Infrastructure.CimCmdlets.dll
    - Microsoft.PowerShell.Commands.Diagnostics.dll
    - Microsoft.PowerShell.Commands.Management.dll
    - Microsoft.PowerShell.Commands.Utility.dll
    - Microsoft.PowerShell.ConsoleHost.dll
    - Microsoft.PowerShell.CoreCLR.Eventing.dll
    - Microsoft.PowerShell.Security.dll
    - Microsoft.PowerShell.SDK.dll
    - Microsoft.WSMan.Management.dll
    - Microsoft.WSMan.Runtime.dll
    - System.Management.Automation.dll

steps:
- ${{ each value in parameters.ListOfFiles }}:
  - pwsh: |
      $FileName = '${{ value }}'
      $FileBaseName = [System.IO.Path]::GetFileNameWithoutExtension($FileName)
      $FilePackagePath = Join-Path -Path '${{ parameters.PackagePath }}' -ChildPath $FileBaseName
      $CGManifestPath = Join-Path -Path '${{ parameters.PackagePath }}' -ChildPath 'CGManifest'
      Write-Verbose -Verbose "FileName to package: $FileName"
      Write-Verbose -Verbose "FilePackage path: $FilePackagePath"
      Write-Verbose -Verbose "CGManifest path: $CGManifestPath"
      # Set SBOM package name
      $vstsCommandString = "vso[task.setvariable variable=SbomFilePackageName]${FileBaseName}"
      Write-Host "sending " + $vstsCommandString
      Write-Host "##$vstsCommandString"
      # Set SBOM package path variable
      $vstsCommandString = "vso[task.setvariable variable=SbomFilePackagePath]${FilePackagePath}"
      Write-Host "sending " + $vstsCommandString
      Write-Host "##$vstsCommandString"
      # Set CGManifest path variable
      $vstsCommandString = "vso[task.setvariable variable=CGManifestPath]${CGManifestPath}"
      Write-Host "sending " + $vstsCommandString
      Write-Host "##$vstsCommandString"
      # Create Nuget package sources
      Import-Module -Name $env:REPOROOT\build.psm1
      Import-Module -Name $env:REPOROOT\tools\packaging
      Find-DotNet
      New-ILNugetPackageSource -File $FileName -PackagePath '${{ parameters.PackagePath }}' -PackageVersion '${{ parameters.PackageVersion }}' -WinFxdBinPath '${{ parameters.WinFxdPath }}' -LinuxFxdBinPath '${{ parameters.LinuxFxdPath }}' -GenAPIToolPath '${{ parameters.GenAPIToolPath }}' -CGManifestPath $CGManifestPath
    displayName: 'Create NuGet Package source for single file'

  - template: Sbom.yml@ComplianceRepo
    parameters:
      BuildDropPath: $(SbomFilePackagePath)
      Build_Repository_Uri: 'https://github.com/powershell/powershell'
      PackageName: $(SbomFilePackageName)
      PackageVersion: ${{ parameters.PackageVersion }}
      sourceScanPath: $(CGManifestPath)
      displayName: SBOM for NuGetPkg

  - pwsh: |
      $FileName = '${{ value }}'
      $FileBaseName = [System.IO.Path]::GetFileNameWithoutExtension($FileName)
      $FilePackagePath = Join-Path -Path '${{ parameters.PackagePath }}' -ChildPath $FileBaseName
      Write-Verbose -Verbose "FileName to package: $FileName"
      Write-Verbose -Verbose "FilePackage path: $FilePackagePath"
      Import-Module -Name $env:REPOROOT\build.psm1
      Import-Module -Name $env:REPOROOT\tools\packaging
      Find-DotNet
      New-ILNugetPackageFromSource -FileName $FileName -PackageVersion '${{ parameters.PackageVersion }}' -PackagePath '${{ parameters.PackagePath }}'
    displayName: 'Create NuGet Package for single file'
